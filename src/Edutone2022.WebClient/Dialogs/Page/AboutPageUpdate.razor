<MudDialog>
    <DialogContent>
        <EditForm EditContext="@editContext">
            <DataAnnotationsValidator />

            <MudTextField Label="Название" Class="mt-3" Lines="2" @bind-Value="AboutModel.Title" For="@(() => AboutModel.Title)" />
            <MudText Typo="Typo.body2" Class="my-4">Название</MudText>
            <MudTextField Label="Содержание" Class="mt-3" Lines="20" @bind-Value="AboutModel.Content" For="@(() => AboutModel.Content)" />
            <MudText Typo="Typo.body2" Class="my-4">Содержание</MudText>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отменить</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Info" OnClick="Update" Disabled="@formInvalid">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public AboutPageModel AboutModel { get; set; } = new();

    private bool formInvalid = true;
    private EditContext editContext;


    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(AboutModel);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    private void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        formInvalid = !editContext.Validate();
        StateHasChanged();
    }

    async Task Update()
    {
        MudDialog.Close(DialogResult.Ok(AboutModel));
    }

    void Cancel() => MudDialog.Cancel();
}