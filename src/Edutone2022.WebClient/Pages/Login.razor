@page "/login"

@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<section class="user-login section">
	<div class="container">
		<div class="row">
			<div class="col-12">
				<div class="block">
					<!-- Image -->
					<div class="image align-self-center">
						<img class="img-fluid" src="images/front-desk-sign-in.jpg"
							 alt="desk-image">
					</div>
					<!-- Content -->
					<div class="content text-center">
						<div class="logo">
							<a href="index.html"><img src="images/logo.png" alt=""></a>
						</div>
						<div class="title-text">
							<h3>Авторизация</h3>
						</div>
						<EditForm Model="loginModel" OnValidSubmit="ExecuteLogin">
							<DataAnnotationsValidator />
							<MudCard>
								<MudCardContent>
									<MudTextField Label="Логин" @bind-Value="loginModel.UserName" For="@(() => loginModel.UserName)" />
									<MudTextField Label="Пароль" Class="mt-3" @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" InputType="InputType.Password" />
								</MudCardContent>
								<MudCardActions>
									<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Вход</MudButton>
								</MudCardActions>
							</MudCard>
						</EditForm>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>


@code {
    private LoginRequest loginModel = new ();

    public async Task ExecuteLogin()
    {
        var result = await AuthService.Login(loginModel);
        if (result.IsSuccessful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Snackbar.Add($"Ошибка: {result.Message}", Severity.Error);
        }
    }
}
